{"ast":null,"code":"import { ADD_FAV, MAP_FAV, REMOVE_FAV, GET_CHARACTER, REMOVE_CHARACTER } from \"./action-types\";\nexport const addFav = character => {\n  const endPoint = \"http://localhost:3001/rickandmorty/fav\";\n  return async function (dispatch) {\n    try {\n      const response = await fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(character)\n      });\n      const data = await response.json();\n      return dispatch({\n        type: ADD_FAV,\n        payLoad: data\n      });\n    } catch (error) {\n      console.log(error.message);\n      return false;\n    }\n  };\n};\nexport const removeFav = id => {\n  const endpoint = `http://localhost:3001/rickandmorty/fav/${String()}`;\n  return async function (dispatch) {\n    try {\n      const response = await fetch(endpoint, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      dispatch({\n        type: REMOVE_FAV,\n        payload: data\n      });\n    } catch (error) {\n      console.log(\"no existe este personaje\");\n    }\n  };\n};\nexport const mapFav = value => {\n  return {\n    type: MAP_FAV,\n    payLoad: value\n  };\n};\nexport const getCharacter = input => {\n  return async function (dispatch) {\n    try {\n      const response = await fetch(`http://localhost:3001/rickandmorty/character/${input}`);\n      const data = await response.json();\n      return dispatch({\n        type: GET_CHARACTER,\n        payLoad: data\n      });\n    } catch (error) {\n      console.log(error.message);\n      return false;\n    }\n  };\n};\nexport const removeCharacter = id => {\n  return {\n    type: REMOVE_CHARACTER,\n    payLoad: id\n  };\n};","map":{"version":3,"names":["ADD_FAV","MAP_FAV","REMOVE_FAV","GET_CHARACTER","REMOVE_CHARACTER","addFav","character","endPoint","dispatch","response","fetch","method","headers","body","JSON","stringify","data","json","type","payLoad","error","console","log","message","removeFav","id","endpoint","String","payload","mapFav","value","getCharacter","input","removeCharacter"],"sources":["C:/Users/gomez/OneDrive/Desktop/rick-and-morty/client/src/redux/actions.js"],"sourcesContent":["import { ADD_FAV, MAP_FAV, REMOVE_FAV, GET_CHARACTER, REMOVE_CHARACTER} from \"./action-types\";\r\n\r\nexport const addFav = (character) => {\r\n    const endPoint = \"http://localhost:3001/rickandmorty/fav\"\r\n    return async function(dispatch){\r\n        try {\r\n            const response = await fetch(endPoint,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                 },\r\n                body: JSON.stringify(character),\r\n                \r\n            });\r\n            const data = await response.json()\r\n\r\n            return dispatch({type: ADD_FAV , payLoad: data})\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFav = (id) => {\r\n    const endpoint = `http://localhost:3001/rickandmorty/fav/${String()}`;\r\n    return async function (dispatch) {\r\n        try {\r\n        const response = await fetch(endpoint, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n         const data = await response.json();\r\n\r\n         dispatch({\r\n            type: REMOVE_FAV,\r\n            payload: data\r\n         });\r\n        } catch (error) {\r\n            console.log(\"no existe este personaje\")\r\n        }\r\n   };\r\n}\r\n\r\nexport const mapFav = (value) => {\r\n    return {\r\n        type: MAP_FAV,\r\n        payLoad: value\r\n    }\r\n}\r\n\r\nexport const getCharacter = (input) => {\r\n    return async function(dispatch){\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/rickandmorty/character/${input}`);\r\n            const data = await response.json()\r\n            return dispatch({type: GET_CHARACTER , payLoad: data})\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeCharacter = (id) => {\r\n    return {\r\n        type: REMOVE_CHARACTER,\r\n        payLoad: id\r\n    }\r\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,gBAAgB;AAE7F,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACjC,MAAMC,QAAQ,GAAG,wCAAwC;EACzD,OAAO,gBAAeC,QAAQ,EAAC;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAC;QAClCI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACnB,CAAC;QACFC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS;MAElC,CAAC,CAAC;MACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAElC,OAAOT,QAAQ,CAAC;QAACU,IAAI,EAAElB,OAAO;QAAGmB,OAAO,EAAEH;MAAI,CAAC,CAAC;IAEpD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;MAC1B,OAAO,KAAK;IAChB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAK;EAC7B,MAAMC,QAAQ,GAAI,0CAAyCC,MAAM,EAAG,EAAC;EACrE,OAAO,gBAAgBnB,QAAQ,EAAE;IAC7B,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACgB,QAAQ,EAAE;QACnCf,MAAM,EAAE;MACZ,CAAC,CAAC;MAED,MAAMK,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAElCT,QAAQ,CAAC;QACNU,IAAI,EAAEhB,UAAU;QAChB0B,OAAO,EAAEZ;MACZ,CAAC,CAAC;IACH,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C;EACL,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,MAAM,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHZ,IAAI,EAAEjB,OAAO;IACbkB,OAAO,EAAEW;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,OAAO,gBAAexB,QAAQ,EAAC;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gDAA+CsB,KAAM,EAAC,CAAC;MACrF,MAAMhB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAClC,OAAOT,QAAQ,CAAC;QAACU,IAAI,EAAEf,aAAa;QAAGgB,OAAO,EAAEH;MAAI,CAAC,CAAC;IAE1D,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;MAC1B,OAAO,KAAK;IAChB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMU,eAAe,GAAIR,EAAE,IAAK;EACnC,OAAO;IACHP,IAAI,EAAEd,gBAAgB;IACtBe,OAAO,EAAEM;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}